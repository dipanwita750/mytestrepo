{"filter":false,"title":"5thruby.rb","tooltip":"/5thruby.rb","ace":{"folds":[],"scrolltop":22,"scrollleft":0,"selection":{"start":{"row":2,"column":17},"end":{"row":2,"column":17},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"hash":"28ca46adae1ec354b3e0d714eb7428cc6656fbaf","undoManager":{"mark":2,"position":2,"stack":[[{"start":{"row":0,"column":0},"end":{"row":23,"column":62},"action":"insert","lines":["# Double-quoted strings can substitute variables.","a = 17","print \"a = #{a}\\n\";","print 'a = #{a}\\n';","","print \"\\n\";","","# If you're verbose, you can create a multi-line string like this.","b = <<ENDER","This is a longer string,","perhaps some instructions or agreement","goes here.  By the way,","a = #{a}.","ENDER","","print \"\\n[[[\" + b + \"]]]\\n\";","","print \"\\nActually, any string","can span lines.  The line\\nbreaks just become","part of the string.","\"","","print %Q=\\nThe highly intuitive \"%Q\" prefix allows alternative delimiters.\\n=","print %Q[Bracket symbols match their mates, not themselves.\\n]"],"id":1}],[{"start":{"row":2,"column":16},"end":{"row":2,"column":17},"action":"remove","lines":["n"],"id":2}],[{"start":{"row":2,"column":16},"end":{"row":2,"column":17},"action":"insert","lines":["p"],"id":3}]]},"timestamp":1519119398905}